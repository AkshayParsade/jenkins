pipeline {
    agent any 
    stages {
        stage('Pull') {
            steps {
                git 'https://github.com/shubhamkalsait/studentapp-ui.git'
            }
        }
        stage('Build') {
            steps {
                sh '/opt/maven/bin/mvn clean package'
            }
        }
        // stage('Test') {
        //     steps {
        //         sh '/opt/maven/bin/mvn sonar:sonar   -Dsonar.projectKey=studentapp   -Dsonar.host.url=http://18.218.5.157:9000   -Dsonar.login=sqp_5ee3d60a4ef5e16f18c411af0de0f8e0c9199f6a'
        //     }
        // }
        stage('Test') {
            steps {
                withSonarQubeEnv(installationName: 'sonar', credentialsId: 'sonar-token') {
                    sh '/opt/maven/bin/mvn sonar:sonar -Dsonar.projectKey=studentapp'
                }           
            }
        }
        stage('QualityGate') {
            steps {
                timeout(10) {
                    waitForQualityGate abortPipeline: true, credentialsId: 'sonar-token'
                }
            }
        }
        // stage('Deploy') {
        //     steps {
        //         deploy adapters: [tomcat9(credentialsId: 'tomcat-cred', path: '', url: 'http://172.31.40.235:8081')], contextPath: '/ ', war: 'target/*.war'
        //     }

       // stage('Delivery') {
         //   steps {
        //      echo 'Deploying to S3...'
         //       withAWS(credentials: 'aws-cred', region: "${ap-south-1}") {
         //            sh 'aws s3 cp target/studentapp-2.0-SNAPSHOT.war s3://${my-studentapp-bux }'
                    
          //      }        
   // } 

stage('Delivery') {
    steps {
        echo 'Deploying to S3...'

        // Correcting the AWS region syntax
        withAWS(credentials: 'aws-cred', region: 'ap-south-1') {
            script {
                def bucketName = 'my-studentapp-bux'  // Replace with your actual bucket name
                def warFilePath = 'target/studentapp-2.0-SNAPSHOT.war'

                // Check if the WAR file exists before uploading
                if (fileExists(warFilePath)) {
                    sh "aws s3 cp ${warFilePath} s3://${my-studentapp-bux}/"
                    echo "Successfully uploaded ${warFilePath} to s3://${my-studentapp-bux}/"
                } else {
                    error "File not found: ${warFilePath}"
                }
            }
        }
    }
}


}
    }

post {
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
